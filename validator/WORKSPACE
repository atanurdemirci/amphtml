workspace(name = "validator")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "com_google_absl",
    sha256 = "f6c1e7a92320d8081e6b6df6bf4310dc9a6d21bf1fbd560f602682f82452251d",
    strip_prefix = "abseil-cpp-17014064a4ea367952eb4a595796f48c688c1467",
    urls = ["https://github.com/abseil/abseil-cpp/archive/17014064a4ea367952eb4a595796f48c688c1467.zip"],
)

http_archive(
    name = "com_google_googletest",
    sha256 = "19a8a6d3461ac7bb3bb8ef4810af085d23a0694be583543b501b286d3cdb71e7",
    strip_prefix = "googletest-2acd53824402affcf473b2355d7323047e660e86",
    urls = ["https://github.com/google/googletest/archive/2acd53824402affcf473b2355d7323047e660e86.zip"],  # 2019-01-07
)

http_archive(
    name = "com_google_protobuf",
    sha256 = "bb014d603d023cd795a53e9e51b9867400e8211e11cab874697fc1c44645e611",
    strip_prefix = "protobuf-68b34feb5aa05f6ce9238236ab02722386e2c25a",
    urls = ["https://github.com/protocolbuffers/protobuf/archive/68b34feb5aa05f6ce9238236ab02722386e2c25a.zip"],
)
load("@com_google_protobuf//:protobuf_deps.bzl", "protobuf_deps")
protobuf_deps()

http_archive(
    name = "com_github_gflags_gflags",
    sha256 = "017e0a91531bfc45be9eaf07e4d8fed33c488b90b58509dbd2e33a33b2648ae6",
    strip_prefix = "gflags-a738fdf9338412f83ab3f26f31ac11ed3f3ec4bd",
    urls = ["https://github.com/gflags/gflags/archive/a738fdf9338412f83ab3f26f31ac11ed3f3ec4bd.zip"],
)

http_archive(
    name = "com_googlesource_code_re2",
    sha256 = "3a7de08e3b372e95a14d885c2b28d1b4be1f089b0fa5fa072ee6b6d7c0ddbabf",
    strip_prefix = "re2-231c1176482a72331db6c488490b1d8d1cc5b820",
    urls = ["https://github.com/google/re2/archive/231c1176482a72331db6c488490b1d8d1cc5b820.zip"],
)

# rules_cc defines rules for generating C++ code from Protocol Buffers.
http_archive(
    name = "rules_cc",
    sha256 = "750d549b7d919426959b92ea156f0c5c3030b88f9a236ecb7c30ae72ad829284",
    strip_prefix = "rules_cc-1dbb6917128da0ef5e35df3e8b060488e8c2acdc",
    urls = ["https://github.com/bazelbuild/rules_cc/archive/1dbb6917128da0ef5e35df3e8b060488e8c2acdc.zip"],
)
load("@rules_cc//cc:repositories.bzl", "rules_cc_dependencies")
rules_cc_dependencies()

# rules_proto defines abstract rules for building Protocol Buffers.
http_archive(
    name = "rules_proto",
    sha256 = "5d4cd6780634eb2ecafa091df8be8009d395f70a02f722e07e063883dd8af861",
    strip_prefix = "rules_proto-493169c1199dc21b9da860f7040a4502aa174676",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/rules_proto/archive/493169c1199dc21b9da860f7040a4502aa174676.tar.gz",
        "https://github.com/bazelbuild/rules_proto/archive/493169c1199dc21b9da860f7040a4502aa174676.tar.gz",
    ],
)
load("@rules_proto//proto:repositories.bzl", "rules_proto_dependencies", "rules_proto_toolchains")
rules_proto_dependencies()
rules_proto_toolchains()

http_archive(
    name = "emsdk",
    sha256 = "8c327ab12db8a6702bff7159993b54787b302839ccbb80f3310df7dc956695c3",
    strip_prefix = "emsdk-3bde060365b09e942d1c6cd82adf7a65ee630f97/bazel",
    url = "https://github.com/emscripten-core/emsdk/archive/3bde060365b09e942d1c6cd82adf7a65ee630f97.tar.gz",
)

load("@emsdk//:deps.bzl", emsdk_deps = "deps")
emsdk_deps()

load("@emsdk//:emscripten_deps.bzl", emsdk_emscripten_deps = "emscripten_deps")
emsdk_emscripten_deps(emscripten_version = "2.0.31")

http_archive(
    name = "com_google_javascript_closure_library",
    sha256 = "5fce9b68c9d4c43347f8fc72bb565198e6bcec6280b1c4dc53538be2d97fcc87",
    strip_prefix = "closure-library-5918355a90382ab6d17e31ba7df8044d40f319f1",
    urls = ["https://github.com/google/closure-library/archive/5918355a90382ab6d17e31ba7df8044d40f319f1.tar.gz"],
)

http_archive(
    name = "io_bazel_rules_closure",
    sha256 = "a444bc9baf8f8b5c2ab21a41a1ee498a320482cd6ec07d73a124e4f7dc8e6708",
    strip_prefix = "rules_closure-3ad6806fa6d4b296e8b268831348fb695ba14c8a",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/rules_closure/archive/3ad6806fa6d4b296e8b268831348fb695ba14c8a.tar.gz",
        "https://github.com/bazelbuild/rules_closure/archive/3ad6806fa6d4b296e8b268831348fb695ba14c8a.tar.gz",
    ],
)

load("@io_bazel_rules_closure//closure:repositories.bzl", "rules_closure_dependencies", "rules_closure_toolchains")
rules_closure_dependencies()
rules_closure_toolchains()

local_repository(
    name = "amphtml-extensions",
    path = "../extensions",
)
